@using BlogEngine.NET.Custom.Widgets
@{
    if (IsPost)
    {
        var emailToDelete = Request.Form["hdnEmail"].Trim();
        if (emailToDelete.Length > 0)
        {
            Newsletter.RemoveEmail(emailToDelete);
        }
    }
}
<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="~/Content/bootstrap.min.css">
    <link rel="stylesheet" href="~/admin/themes/standard/css/styles.css">

    <script>
        var deleteEmail = function (email) {
            document.getElementById("hdnEmail").value = email;
            document.getElementById("frmNewsletter").submit();
        }
    </script>
</head>
<body class="widget-edit">
    <div class="widget-edit-newsletter">
        <form id="frmNewsletter" name="frmNewsletter" method="post">
            <div class="form-group">
                <h4>Subscriptions</h4>
                @foreach (var email in Newsletter.LoadEmails())
                {
                    <div class="list-group-item" style="padding-bottom:15px;padding-top:10px">
                        <input type="checkbox"
                               name="selectedItems"
                               value="~item.Value"
                               @(Html.Raw(@email.Attributes["confirmed"].Value == "True" ? "checked=\" checked\"" : "")) /> @email.InnerText
                    
                        <button onclick="deleteEmail('@email.InnerText')" class=" btn 
                            @(Html.Raw(@email.Attributes["blocked"]!=null && @email.Attributes["blocked"].Value == "True" ? "btn-danger" : "btn-success")) 
                            btn-sm pull-right email-delete">
                        
                            @(@email.Attributes["blocked"]!=null && @email.Attributes["blocked"].Value == "True" ? "Unblock" : "Block ")
                        </button>
                    </div>
                 }
            </div>
            <button type="submit" class="btn btn-success">
                @Resources.labels.save
            </button>
            <input type="hidden" id="hdnEmail" name="hdnEmail" />
        </form>
    </div>
</body>
</html>

<!---
    <div class="form-group">
                Select Test: <br />
                ~{
                    var select = ViewData["testing"] as SelectList;
                    if (select !=null && select.ToList().Count>0)
                    {
                        foreach (var item in select.ToList())
                        {
<input type="checkbox" 
    name="selectedItems"  
    value="~item.Value" 
    ~(Html.Raw(item.Selected ? "checked=\"checked\"" : "")) 
    /> ~item.Text  <br/>
                        }
                    }
                 }
            </div>

    -->
